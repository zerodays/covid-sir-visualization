{"version":3,"sources":["VisualizationField.js","HelpCard.js","ControlPanel.js","App.js","index.js"],"names":["field","VisualizationField","canvasRef","React","createRef","countInfectedNeighbours","x","y","props","widthPoints","heightPoints","count","i","j","paintRect","newField","canvasContext","rectSize","fillStyle","getColorFromState","fillRect","getNewStateForPoint","Math","random","gamma","infectedNeighbours","betta","state","infectedColor","susceptibleColor","removedColor","emptyField","Array","fill","evolve","tick","context","getCanvasContext","startTime","Date","getTime","console","log","addSeed","reset","clearRect","current","getContext","this","classes","className","root","style","width","height","ref","canvas","backgroundColor","transform","zoom","Component","withStyles","theme","position","overflow","HelpCard","Card","Box","p","expandable","Grid","container","direction","spacing","item","xs","Typography","variant","href","key","legend","maxWidth","grey","borderRadius","borderWidth","borderColor","borderStyle","paddingX","paddingY","maxHeight","transition","display","marginRight","ControlPanel","justify","day","pt","Slider","value","min","max","step","onChange","e","v","onChangeBetta","valueLabelDisplay","onChangeGamma","Button","size","onClick","onReset","color","float","SUSCEPTIBLE_COLOR","colors","INFECTED_COLOR","red","REMOVED_COLOR","blue","App","fieldRef","seedCalled","iterateWithSeed","keyCode","w","document","body","clientWidth","h","clientHeight","xPosition","ceil","yPosition","setState","prevState","onScroll","newZoom","deltaY","addEventListener","wPoints","hPoints","removeEventListener","onKeyDown","onWheel","fieldContainer","helpCardContainer","controlPanelContainer","top","left","opacity","right","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91587d88.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  withStyles,\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  canvas: {\n    position: 'absolute',\n  },\n});\n\n// global data fields for better performance\nlet field;\nconst SUSCEPTIBLE = 0;\nconst INFECTED = 1;\nconst REMOVED = 2;\n\nclass VisualizationField extends Component {\n  canvasRef = React.createRef();\n\n  componentDidMount() {\n    field = this.emptyField();\n  }\n\n  countInfectedNeighbours = (field, x, y) => {\n    const {widthPoints, heightPoints} = this.props;\n\n    let count = 0;\n\n    for (let i = y - 1; i < y + 2; i++) {\n      for (let j = x - 1; j < x + 2; j++) {\n\n        if (i === x && j === y) continue; // skip self\n        if (i < 0 || j < 0 || i >= heightPoints || j >= widthPoints) continue; // watch for array boundaries\n\n        if (field[i][j] === INFECTED) count++;\n      }\n    }\n\n    return count;\n  };\n\n  paintRect = (x, y, newField, canvasContext) => {\n    const {rectSize} = this.props;\n    canvasContext.fillStyle = this.getColorFromState(newField[y][x]);\n    canvasContext.fillRect(rectSize * x, rectSize * y, rectSize, rectSize);\n  };\n\n  getNewStateForPoint = (field, x, y) => {\n    if (field[y][x] === REMOVED) return REMOVED;\n\n    if (field[y][x] === INFECTED) {\n      if (Math.random() < this.props.gamma) return REMOVED;\n      else return INFECTED;\n    }\n\n    let infectedNeighbours = this.countInfectedNeighbours(field, x, y);\n\n    if (Math.random() < infectedNeighbours * this.props.betta/8) return INFECTED;\n    return SUSCEPTIBLE;\n  };\n\n  getColorFromState = (state) => {\n    const {infectedColor, susceptibleColor, removedColor} = this.props;\n    if (state === INFECTED) return infectedColor;\n    if (state === REMOVED) return removedColor;\n    return susceptibleColor;\n  };\n\n  emptyField = () => {\n    const {widthPoints, heightPoints} = this.props;\n\n    let newField = Array(heightPoints);\n    for (let i = 0; i < heightPoints; i++) {\n      newField[i] = Array(widthPoints).fill(0);\n    }\n    return newField;\n  };\n\n  evolve = (field, canvasContext) => {\n    const {widthPoints, heightPoints} = this.props;\n    let newField = this.emptyField();\n\n    for (let y = 0; y < heightPoints; y++) {\n      for (let x = 0; x < widthPoints; x++) {\n        newField[y][x] = this.getNewStateForPoint(field, x, y);\n\n        if (newField[y][x] !== field[y][x]) this.paintRect(x, y, newField, canvasContext);\n      }\n    }\n\n    return newField;\n  };\n\n  tick = () => {\n    let context = this.getCanvasContext();\n\n    let startTime = new Date().getTime();\n    field = this.evolve(field, context);\n    console.log(`time for evolution: ${new Date().getTime() - startTime} ms`);\n  };\n\n  addSeed = (x, y) => {\n    field[y][x] = INFECTED;\n    this.paintRect(x, y, field, this.getCanvasContext());\n  };\n\n  reset = () => {\n    const {widthPoints, heightPoints, rectSize} = this.props;\n    field = this.emptyField();\n    this.getCanvasContext().clearRect(0, 0, widthPoints * rectSize, heightPoints * rectSize);\n  };\n\n  getCanvasContext = () => {\n    return this.canvasRef.current.getContext('2d');\n  };\n\n\n  render() {\n    const {classes, widthPoints, heightPoints, rectSize, susceptibleColor} = this.props;\n\n    return <div className={classes.root} style={{\n      width: widthPoints * rectSize,\n      height: heightPoints * rectSize,\n    }}>\n      <canvas\n        ref={this.canvasRef}\n        className={classes.canvas}\n        style={{\n          backgroundColor: susceptibleColor,\n          transform: `scale(${this.props.zoom})`,\n          width: widthPoints * rectSize,\n          height: heightPoints * rectSize,\n        }}\n        width={widthPoints * rectSize}\n        height={heightPoints * rectSize}/>\n    </div>;\n  }\n}\n\nVisualizationField.propTypes = {\n  betta: PropTypes.number.isRequired,\n  gamma: PropTypes.number.isRequired,\n  zoom: PropTypes.number.isRequired,\n  widthPoints: PropTypes.number.isRequired,\n  heightPoints: PropTypes.number.isRequired,\n  rectSize: PropTypes.number.isRequired,\n  infectedColor: PropTypes.string.isRequired,\n  susceptibleColor: PropTypes.string.isRequired,\n  removedColor: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(VisualizationField);\n\n","import React, { Component } from 'react';\nimport { Box, Card, Grid, Typography, withStyles } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 256,\n  },\n  key: {\n    backgroundColor: grey[300],\n    borderRadius: 2,\n    borderWidth: 2,\n    borderColor: grey[300],\n    borderStyle: 'solid',\n    paddingX: 8,\n    paddingY: 2,\n  },\n  expandable: {\n    maxHeight: 20,\n    transition: 'max-height 300ms ease-out',\n    '&:hover': {\n      maxHeight: 490,\n    },\n  },\n  legend: {\n    width: 12,\n    height: 12,\n    borderColor:  grey[700],\n    borderWidth: 1,\n    borderStyle: 'solid',\n    borderRadius: 2,\n    display: 'inline-block',\n    marginRight: 6,\n  },\n});\n\nclass HelpCard extends Component {\n  render() {\n    const {classes} = this.props;\n\n    return <Card className={classes.root}>\n      <Box p={1} className={classes.expandable}>\n        <Grid container direction='row' spacing={1}>\n          <Grid item xs={12}>\n            <Typography variant='subtitle2'>\n              Help\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='caption'>\n              This is a simplified discrete representation of the epidemiological <a\n              href={'https://en.m.wikipedia.org/wiki/Compartmental_models_in_epidemiology#The_SIR_model'}>SIR model</a>.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='subtitle2'>\n              Navigation\n            </Typography>\n            <Typography variant='caption'>\n              <ul>\n                <li>Press <span className={classes.key}>Enter</span> to move to the next day. First infection will\n                  appear in the center of the screen on <b>day 1</b>.\n                </li>\n                <li><span className={classes.key}>Scroll</span> to zoom in and out of the visualization.</li>\n                <li>Use <b>control panel on the right</b> to adjust simulation parameters.</li>\n                <li>Hover over the <b>graph icon in the left bottom conner</b> to view number of\n                  susceptible/infected/removed individuals over time.\n                </li>\n              </ul>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='subtitle2'>\n              Legend\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='caption'>\n              <span className={classes.legend} style={{backgroundColor: this.props.susceptibleColor}}/>Susceptible individuals.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='caption'>\n              <span className={classes.legend} style={{backgroundColor: this.props.infectedColor}}/>Infected individuals.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='caption'>\n              <span className={classes.legend} style={{backgroundColor: this.props.removedColor}}/>Removed (deceased or immune) individuals.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>;\n  }\n}\n\nHelpCard.propTypes = {\n  infectedColor: PropTypes.string.isRequired,\n  susceptibleColor: PropTypes.string.isRequired,\n  removedColor: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(HelpCard);","import React, { Component } from 'react';\nimport { Box, Card, Grid, Slider, Button, Typography, withStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n  root: {\n    width: 256,\n  },\n  day: {\n    float: 'right',\n  }\n});\n\nclass ControlPanel extends Component {\n  render() {\n    const {classes} = this.props;\n\n    return <Card className={classes.root}>\n      <Box p={1}>\n        <Grid container direction='row' justify='center' spacing={1}>\n          <Grid item xs={12}>\n            <Typography variant='subtitle2'>\n              Control panel <span className={classes.day}>Day {this.props.day}</span>\n            </Typography>\n          </Grid>\n          <Grid item xs={12}/>\n          <Grid item xs={12}>\n            <Typography variant='body2'>\n              β <small> - probability of being infected after a contact with an infectious individual</small>\n            </Typography>\n            <Box pt={4}>\n              <Slider\n                value={this.props.betta}\n                min={0}\n                max={1}\n                step={0.01}\n                onChange={(e, v) => this.props.onChangeBetta(v)}\n                valueLabelDisplay=\"on\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}/>\n          <Grid item xs={12}>\n            <Typography variant='body2'>\n              γ <small> - probability of being \"removed\" (either dying or becoming non-susceptible)</small>\n            </Typography>\n            <Box pt={4}>\n              <Slider\n                value={this.props.gamma}\n                min={0}\n                max={1}\n                step={0.01}\n                onChange={(e, v) => this.props.onChangeGamma(v)}\n                valueLabelDisplay=\"on\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}/>\n          <Grid item xs={12}>\n            <Typography variant='caption'>\n              TODO: table of sample values for covid, vaccinated population, flue etc.\n            </Typography>\n          </Grid>\n          <Grid item xs={12}/>\n          <Grid item>\n            <Button size='small' variant='raised' onClick={this.props.onReset} color='secondary'>\n              Reset simulation\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>;\n  }\n}\n\nControlPanel.propTypes = {\n  day: PropTypes.number.isRequired,\n  betta: PropTypes.number.isRequired,\n  gamma: PropTypes.number.isRequired,\n  onChangeBetta: PropTypes.func.isRequired,\n  onChangeGamma: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(ControlPanel);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport { colors } from '@material-ui/core';\nimport VisualizationField from './VisualizationField';\nimport HelpCard from './HelpCard';\nimport ControlPanel from './ControlPanel';\n\nconst RECT_SIZE = 3;\nconst SUSCEPTIBLE_COLOR = colors.grey[200];\nconst INFECTED_COLOR = colors.red[400];\nconst REMOVED_COLOR = colors.blue[400];\n\nconst styles = theme => ({\n  root: {\n    overflow: 'hidden',\n    height: '100vh',\n    width: '100vw',\n    position: 'relative',\n  },\n  fieldContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  helpCardContainer: {\n    position: 'absolute',\n    top: 16,\n    left: 16,\n    opacity: 0.6,\n    transition: 'opacity 200ms ease-in-out',\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n  controlPanelContainer: {\n    position: 'absolute',\n    right: 16,\n    top: 16,\n    opacity: 0.6,\n    transition: 'opacity 200ms ease-in-out',\n    '&:hover': {\n      opacity: 1,\n    },\n  },\n});\n\nclass App extends Component {\n  fieldRef = React.createRef();\n  state = {\n    seedCalled: false,\n    day: 0,\n    zoom: 1.0,\n    widthPoints: null,\n    heightPoints: null,\n    betta: 0.8,\n    gamma: 0.2,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.iterateWithSeed);\n\n    const w = document.body.clientWidth;\n    const h = document.body.clientHeight;\n\n    const wPoints = Math.ceil(w / RECT_SIZE);\n    const hPoints = Math.ceil(h / RECT_SIZE);\n\n    this.setState({\n      widthPoints: wPoints,\n      heightPoints: hPoints,\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.iterateWithSeed);\n  }\n\n  iterateWithSeed = (e) => {\n    if (e.keyCode !== 13) return;\n\n    const field = this.fieldRef.current;\n\n    if (!this.state.seedCalled) {\n      const w = document.body.clientWidth;\n      const h = document.body.clientHeight;\n\n      const xPosition = Math.ceil(w / RECT_SIZE / 2);\n      const yPosition = Math.ceil(h / RECT_SIZE / 2);\n\n      field.addSeed(xPosition, yPosition);\n      this.setState({seedCalled: true});\n    }\n\n    field.tick();\n    this.setState(prevState => ({day: prevState.day + 1}));\n  };\n\n  onScroll = (e) => {\n    let newZoom = this.state.zoom - e.deltaY / 1000;\n    newZoom = Math.min(3, Math.max(1, newZoom));\n    this.setState({zoom: newZoom});\n  };\n\n  onChangeBetta = value => this.setState({betta: value});\n  onChangeGamma = value => this.setState({gamma: value});\n  onReset = () => {\n    this.setState({\n      seedCalled: false,\n      day: 0,\n    }, this.fieldRef.current.reset);\n  };\n\n  render() {\n    const {classes} = this.props;\n    return <div className={classes.root} onKeyDown={this.iterateWithSeed} onWheel={this.onScroll}>\n      <div className={classes.fieldContainer}>\n        {\n          this.state.widthPoints == null ? null :\n            <VisualizationField\n              ref={this.fieldRef}\n              widthPoints={this.state.widthPoints}\n              heightPoints={this.state.heightPoints}\n              rectSize={RECT_SIZE}\n              susceptibleColor={SUSCEPTIBLE_COLOR}\n              infectedColor={INFECTED_COLOR}\n              removedColor={REMOVED_COLOR}\n              betta={this.state.betta}\n              gamma={this.state.gamma}\n              zoom={this.state.zoom}\n            />\n        }\n      </div>\n\n      <div className={classes.helpCardContainer}>\n        <HelpCard\n          susceptibleColor={SUSCEPTIBLE_COLOR}\n          infectedColor={INFECTED_COLOR}\n          removedColor={REMOVED_COLOR}\n        />\n      </div>\n\n      <div className={classes.controlPanelContainer}>\n        <ControlPanel betta={this.state.betta}\n                      gamma={this.state.gamma}\n                      day={this.state.day}\n                      onChangeBetta={this.onChangeBetta}\n                      onChangeGamma={this.onChangeGamma}\n                      onReset={this.onReset}\n        />\n      </div>\n    </div>;\n  }\n}\n\nexport default withStyles(styles)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}